package ru.mslotvi.exchange;

import java.util.Date;

/**
 * Интерфейс, представляющий запись о сделке на бирже.
 * <p>Этот интерфейс описывает основные атрибуты для записи сделки на бирже, такие как идентификатор доски, дата сделки,
 * название ценной бумаги, количество сделок, объем и закрытие цены.</p>
 *
 * <p>Реализация данного интерфейса должна предоставить доступ к этим атрибутам для каждой записи сделки,
 * которые могут быть использованы для анализа и вычислений.</p>
 */
public interface ExchangeTradeRecord {

    /**
     * Получает идентификатор торговой доски, на которой была совершена сделка.
     * <p>Торговая доска представляет собой рынок или сегмент рынка, на котором происходят торговые операции с ценными бумагами.</p>
     *
     * @return Идентификатор торговой доски, как строка.
     */
    String boardId();

    /**
     * Получает дату, на которую была совершена сделка.
     * <p>Дата сделки отображает момент времени, когда была совершена торговая операция.</p>
     *
     * @return Дата сделки.
     */
    Date tradeDate();

    /**
     * Получает сокращенное название ценной бумаги, с которой была совершена сделка.
     * <p>Это краткое название инструмента, которое используется для его идентификации на бирже.</p>
     *
     * @return Название ценной бумаги.
     */
    String shortName();

    /**
     * Получает идентификатор ценной бумаги (например, ISIN или другой уникальный код).
     * <p>Идентификатор ценной бумаги позволяет точно идентифицировать инструмент на бирже.</p>
     *
     * @return Идентификатор ценной бумаги.
     */
    String secId();

    /**
     * Получает количество сделок по данной ценной бумаге за торговый день.
     * <p>Это количество сделок, которые были заключены по данному инструменту в указанный торговый день.</p>
     *
     * @return Количество сделок.
     */
    Double numTrades();

    /**
     * Получает общую стоимость сделок по данной ценной бумаге за торговый день.
     * <p>Это общая стоимость всех сделок по инструменту в указанный торговый день.</p>
     *
     * @return Общая стоимость сделок.
     */
    Double value();

    /**
     * Получает объем торгов по данной ценной бумаге за торговый день.
     * <p>Объем торговли отображает количество ценных бумаг, которые были проданы или куплены за торговый день.</p>
     *
     * @return Объем торгов.
     */
    Double volume();

    /**
     * Получает цену закрытия ценной бумаги по результатам торгов в конце дня.
     * <p>Цена закрытия является последней ценой, по которой была заключена сделка в конце торгового дня.</p>
     *
     * @return Цена закрытия.
     */
    Double close();
}
