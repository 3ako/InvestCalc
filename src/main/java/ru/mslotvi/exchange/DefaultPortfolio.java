package ru.mslotvi.exchange;

import java.util.Map;

/**
 * Интерфейс, представляющий портфель активов с базовыми характеристиками:
 * весами активов, ожидаемой доходностью и уровнем риска.
 * <p>
 * Используется для финансового моделирования, оптимизации портфеля
 * и построения эффективной границы (Efficient Frontier).
 *
 * @implSpec Реализации должны гарантировать, что:
 * <ul>
 *   <li>Сумма всех весов активов равна 1.0 (100%)</li>
 *   <li>Ожидаемая доходность и риск рассчитаны для заданного временного горизонта</li>
 *   <li>Веса активов неотрицательны (допускается 0 для исключения актива)</li>
 * </ul>
 *
 */
public interface DefaultPortfolio {

   /**
    * Возвращает веса активов в портфеле.
    *
    * @return Неизменяемая (immutable) карта, где:
    *         <ul>
    *           <li>Ключ: идентификатор актива (например, тикер "AAPL")</li>
    *           <li>Значение: вес актива в диапазоне [0.0, 1.0]</li>
    *         </ul>
    * @throws IllegalStateException если сумма весов ≠ 1.0 (с учётом погрешности округления)
    */
   Map<String, Double> weights();

   /**
    * Ожидаемая доходность портфеля (в процентах или десятичной дроби).
    *
    * @return Значение ≥ 0. Например: 0.08 (для 8% годовых)
    */
   double expectedReturn();

   /**
    * Риск портфеля, измеряемый как стандартное отклонение доходности.
    *
    * @return Значение ≥ 0. Чем выше, тем рискованнее портфель.
    */
   double risk();
}